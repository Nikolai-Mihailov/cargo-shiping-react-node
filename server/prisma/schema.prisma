generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model cargos {
  cargo_id        Int                 @id @default(autoincrement())
  user_id         Int
  country_from    String              @db.VarChar(255)
  country_to      String              @db.VarChar(255)
  city_from       String              @db.VarChar(255)
  city_to         String              @db.VarChar(255)
  address_from    String              @db.VarChar(255)
  address_to      String              @db.VarChar(255)
  loading_date    DateTime            @db.DateTime(0)
  delivery_date   DateTime            @db.DateTime(0)
  circular_course Int                 @db.TinyInt
  weight          Int
  size            Int
  cargo_type      cargos_cargo_type
  vehicle_type    cargos_vehicle_type
  registered      DateTime            @default(now()) @db.DateTime(6)
}

model companies {
  company_id       Int                     @id @default(autoincrement())
  user_id          Int
  company_name     String                  @unique @db.VarChar(255)
  country          String                  @db.VarChar(255)
  city             String                  @db.VarChar(255)
  address          String                  @db.VarChar(255)
  owner_first_name String                  @db.VarChar(255)
  owner_last_name  String                  @db.VarChar(255)
  phone            String                  @db.VarChar(50)
  business_type    companies_business_type
  eik              Int
  postcode         String                  @db.VarChar(255)
  date_registered  DateTime                @db.Date
  users            users                   @relation(fields: [user_id], references: [user_id])
  subscriptions    subscriptions[]

  @@index([user_id], name: "dev_idx")
}

model roles {
  id      Int        @id @default(autoincrement())
  user_id Int
  type    roles_type @unique
  users   users      @relation(fields: [user_id], references: [user_id])

  @@index([user_id], name: "user_id")
}

model subscriptions {
  subscription_id   Int                             @unique @default(autoincrement())
  company_id        Int
  subscription_type subscriptions_subscription_type
  subscription_date DateTime                        @db.Date
  expiration_date   DateTime                        @db.Date
  companies         companies                       @relation(fields: [company_id], references: [company_id])

  @@index([company_id], name: "company_id_idx")
}

model users {
  user_id   Int         @id @default(autoincrement())
  username  String      @db.VarChar(100)
  email     String      @db.VarChar(100)
  password  String      @db.VarChar(100)
  companies companies[]
  roles     roles[]

  @@unique([username, email], name: "usernameAndEmail")
}

enum cargos_cargo_type {
  groupage
  complete
  groupage_complete
  oversized
  refrigerated
  refrigerated_groupage
  refrigerated_complete
  refrigerated_grouped_complete
  bulk
  poured
}

enum cargos_vehicle_type {
  trailer
  hanger
  refrigeration
  van
  minibus
  dressage
  solo
  jumbo
  tug
  platform
  onboard
  container_ship
  tank
  megatrailer
  car_carrier
  gondola
  oversized
  tail_lift
  crane
}

enum companies_business_type {
  manufacturer
  logistics_center
  forwarder
  merchant
  farmer
}

enum roles_type {
  admin
  owner
  user
}

enum subscriptions_subscription_type {
  free
  paid
}
